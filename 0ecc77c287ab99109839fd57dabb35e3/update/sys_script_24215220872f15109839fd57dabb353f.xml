<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sc_task</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="sc_task">short_descriptionLIKEAuto-Provisioning Task^state=2^NQwork_notesVALCHANGES^EQ<item endquery="false" field="short_description" goto="false" newquery="false" operator="LIKE" or="false" value="Auto-Provisioning Task"/>
            <item display_value="Work in Progress" endquery="false" field="state" goto="false" newquery="false" operator="=" or="false" value="2"/>
            <item endquery="false" field="work_notes" goto="false" newquery="true" operator="VALCHANGES" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>KCNS-Trigger-LogicApp-VMBuild</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {
    try {
        // Add your code here
        var item = new RITMVariablesUtil();
        var data = item.getVariables(current.request_item, true, true);
        var payload = '{';
        var temp = '{';
        for (var i = 0; i < data.length; i++) {
            if (data[i].name.toString() != 'Additional Disks') {
                temp = temp + JSON.stringify(data[i].name) + ':' + JSON.stringify(data[i].value) + ',';
            } else {
                temp = temp + JSON.stringify(data[i].name) + ':' + JSON.stringify(data[i].value) + ',';


            }
        }

        temp = temp + '"accelerated_networking":"enable",';
        temp = temp + '"boot_diagnostics":"On",';
        temp = temp + '"os_guest_diagnostics":"On",';

        var tags = item.getTags(current.request_item.sys_id);
        temp = temp + '"tags"' + ":" + JSON.stringify(tags);
        temp = temp + '}';

        payload = payload + '"templateParameters":' + temp + '}';

        var msg = "Pipeline Details ";
        var restMsgName = 'Azure_Windows_Linux_Rest_Message';
        var request = new sn_ws.RESTMessageV2(restMsgName, 'triggerVMProvisioningPipeline');

        var usename = gs.getProperty('devops.pipeline.user');
        var token = gs.getProperty('devops.pipeline.token');

        var devopsuser = usename + ':' + token;

        msg = msg + "\ndevopsuser :" + devopsuser;

        var organization = gs.getProperty('pipeline.vm.organization');
        var project = gs.getProperty('pipeline.vm.project');
        project = project.replaceAll(" ", "%20");
        var pipelineId = gs.getProperty('pipeline.vm.pipelineid');
        msg = msg + "\norganization :" + organization;
        msg = msg + "\nproject :" + project;
        msg = msg + "\npipelineId :" + pipelineId;

        request.setStringParameterNoEscape('organization', organization);
        request.setStringParameterNoEscape('project', project);
        request.setStringParameterNoEscape('pipelineId', pipelineId);

        var encodedAuth = GlideStringUtil.base64Encode(devopsuser);
        //request.setBasicAuth('<username>', '<password>');
        msg = msg + "\nencodedAuth :" + encodedAuth;

        request.setRequestHeader("Accept", "Application/json");
        request.setRequestHeader("Content-Type", "application/json");
        request.setRequestHeader("Authorization", "Basic " + encodedAuth);
        request.setRequestBody(payload);

        var endpoint = request.getEndpoint();
        var response = request.execute();
        var httpStatus = response.getStatusCode();

        msg = msg + '\nendpoint :' + endpoint + '\nResponse :' + response.getBody() + '\nstatus : ' + httpStatus;

        if (httpStatus == 200 || httpStatus == 201) {
            var responseBody = response.getBody();
            var parser = new JSONParser();
            var parsed = parser.parse(responseBody);

            gs.log('responseBody :' + responseBody);

            msg = msg + '\nresponseBody :' + responseBody;

        } else {
            gs.log('Error : KCNS-Trigger-LogicApp-VMBuild' + response.getBody() + 'status : ' + httpStatus);

        }


        gs.info('BR : KCNS-Trigger-LogicApp-VMBuild payload : ', payload);
        current.work_notes = 'BR : KCNS-Trigger-LogicApp-VMBuild payload :\n\n' + payload + '\n' + msg;
        current.update();
    } catch (e) {
        current.work_notes = 'BR : KCNS-Trigger-LogicApp-VMBuild exception :\n\n' + e;
        current.update();
    }

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-11-30 15:27:11</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>24215220872f15109839fd57dabb353f</sys_id>
        <sys_mod_count>37</sys_mod_count>
        <sys_name>KCNS-Trigger-LogicApp-VMBuild</sys_name>
        <sys_overrides/>
        <sys_package display_value="Global" source="global">global</sys_package>
        <sys_policy/>
        <sys_scope display_value="Azure Service Catalogs">0ecc77c287ab99109839fd57dabb35e3</sys_scope>
        <sys_update_name>sys_script_24215220872f15109839fd57dabb353f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-12-09 07:13:54</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=24215220872f15109839fd57dabb353f"/>
    <sys_claim action="INSERT_OR_UPDATE">
        <claim_owner_scope display_value="Azure Service Catalogs">0ecc77c287ab99109839fd57dabb35e3</claim_owner_scope>
        <claim_timestamp>184f23c3d480000001</claim_timestamp>
        <metadata_update_name>sys_script_24215220872f15109839fd57dabb353f</metadata_update_name>
        <previous_claim_app_version>1.0.0</previous_claim_app_version>
        <previous_claim_name>Azure Service Catalogs</previous_claim_name>
        <previous_claim_scope>0ecc77c287ab99109839fd57dabb35e3</previous_claim_scope>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-08 14:55:44</sys_created_on>
        <sys_id>11271f8387a39d109839fd57dabb353a</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-12-08 14:55:44</sys_updated_on>
    </sys_claim>
</record_update>
